image: node:20-alpine

stages:
  - lint
  - test
  - deploy

.before_script: &before_script_ssh_setup
  - apk add --no-cache openssh git
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - ssh-keyscan -H $PRODUCTION_HOST >> ~/.ssh/known_hosts

lint:
  stage: lint
  image: node:20-alpine
  before_script:
    - npm ci
  script:
    - npx eslint ./src --no-eslintrc || exit 0

tests:
  stage: test
  script:
    - npm ci
    - npm run test

deploy-production_job:
  stage: deploy
  environment:
    name: production
    url: http://$PRODUCTION_HOST
  before_script: 
    - *before_script_ssh_setup
    - npm ci
    - npm run build
  script:
    - echo "Testing SSH connection..."
    - ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@$PRODUCTION_HOST "echo Connected to production server"
    - echo "Deploying via SCP..."
    - ssh -i ~/.ssh/id_rsa ubuntu@$PRODUCTION_HOST "mkdir -p /var/www/myapp/TangoKalmar/build"
    - scp -rp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o LogLevel=ERROR build/* ubuntu@$PRODUCTION_HOST:/var/www/myapp/TangoKalmar/build/
    # restart application
    - ssh -i ~/.ssh/id_rsa ubuntu@$PRODUCTION_HOST "cd /var/www/myapp/TangoKalmar && npm ci --production && pm2 restart all"
  only:
    - main