image: node:20-alpine

stages:
  - lint
  - test
  - deploy

lint:
  stage: lint
  image: node:20-alpine
  before_script:
    - npm ci
  script:
    - npx eslint ./src --no-eslintrc || exit 0

.before_script: &before_script_ssh_setup
  - apk add --no-cache openssh
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo "Production host is: $PRODUCTION_HOST"  # Debug line
  - ssh-keyscan -H "$PRODUCTION_HOST" >> ~/.ssh/known_hosts || echo "ssh-keyscan failed, continuing anyway"

tests:
  stage: test
  script:
    - npm install
    - npm run test

deploy-production_job:
  stage: deploy
  environment:
    name: production
    url: http://$PRODUCTION_HOST
  before_script: *before_script_ssh_setup
  script:
    - echo "Testing SSH connection..."
    - ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@"$PRODUCTION_HOST" "echo Connected to production server"
    - echo "Deploying source files..."
    - scp -rp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o LogLevel=ERROR --exclude=node_modules --exclude=.git . ubuntu@"$PRODUCTION_HOST":/var/www/TangoKalmar/
    - echo "Installing dependencies on server..."
    - ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@"$PRODUCTION_HOST" "cd /var/www/TangoKalmar && npm install && pm2 restart TangoKalmar || pm2 start server.js --name TangoKalmar"
  only:
    - main